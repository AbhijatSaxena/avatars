{"version":3,"sources":["webpack:///./src/components/teaser/generator.tsx","webpack:///./src/components/teaser.tsx","webpack:///./src/components/introductions.tsx","webpack:///./src/components/spriteCollections/spriteCollection.tsx","webpack:///./src/components/spriteCollections.tsx","webpack:///./src/components/faq.tsx","webpack:///./src/config/avataaars.ts","webpack:///./src/config/bottts.ts","webpack:///./src/config/female.ts","webpack:///./src/config/gridy.ts","webpack:///./src/config/identicon.ts","webpack:///./src/config/jdenticon.ts","webpack:///./src/config/male.ts","webpack:///./src/config.ts","webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/layout/index.tsx"],"names":["Generator","props","_this","_React$Component","call","this","state","spriteCollection","spriteCollections","seed","gravatar","advancedOptions","getSpriteCollectionAdvancedOptions","showAdvancedOptions","spriteDropdownOpen","onChangeSpriteCollection","bind","_assertThisInitialized","onChangeSeed","onToggleShowAdvancedOptions","onChangeAdvancedOptions","toggleSpriteDropdownOpen","onChangeGravatar","seedInputRef","React","componentDidMount","current","focus","setState","prevState","Object","keys","options","filter","field","_meta","forEach","meta","Array","isArray","defaultValue","_toConsumableArray","e","_this2","id","currentTarget","getAttribute","target","value","preventDefault","checked","_this3","name","type","index","indexOf","push","splice","values","parseInt","getAvatarUrl","_this4","key","map","params","stringify","undefined","encodeValuesOnly","arrayFormat","encodeURIComponent","render","_this5","avatar","react","className","href","src","alt","onClick","index_esm","size","UncontrolledTooltip","placement","InputGroupButtonDropdown","addonType","isOpen","toggle","DropdownToggle","outline","caret","DropdownMenu","spritecollection","DropdownItem","data-id","ref","placeholder","onChange","maxLength","Collapse","htmlFor","title","min","max","Teaser","onClickScrollTo","document","querySelector","scrollIntoView","block","behavior","stargazers","generator_Generator","SyntaxHighlighter","registerLanguage","js","Introductions","getHttpApiDescription","array","length","prism_light","style","prism","rel","language","SpriteCollection","SpriteCollections","spriteCollection_SpriteCollection","Faq","yup","oneOf","mode","top","of","topChance","hatColor","hairColor","accessories","accessoriesChance","facialHair","facialHairChance","facialHairColor","clothes","clothesColor","eyes","eyebrow","mouth","skin","noUnknown","colors","colorful","primaryColorLevel","secondaryColorLevel","textureChance","mouthChance","sidesChance","topChange","mood","padding","background","matches","colorLevel","hues","colorLightness","grayscaleLightness","colorSaturation","grayscaleSaturation","config","female","identicon","initials","bottts","avataaars","jdenticon","gridy","__webpack_exports__","_ref","pageContext","react_default","a","createElement","layout","privacyPolicy","legalNotice","teaser_Teaser","introductions_Introductions","spriteCollections_SpriteCollections","faq_Faq","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","assign","json","createContext","Layout","children","gatsby_link_default","to"],"mappings":"ytBAuBqBA,sBAGnB,SAAAA,EAAYC,GAAc,IAAAC,EAAA,OACxBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAEKC,MAAQ,CACXC,iBAAkBN,EAAMO,kBAAkB,GAC1CC,KAAM,GACNC,UAAU,EACVC,gBAAiBT,EAAKU,mCAAmCX,EAAMO,kBAAkB,IACjFK,qBAAqB,EACrBC,oBAAoB,GAGtBZ,EAAKa,yBAA2Bb,EAAKa,yBAAyBC,KAA9BC,EAAAf,IAChCA,EAAKgB,aAAehB,EAAKgB,aAAaF,KAAlBC,EAAAf,IACpBA,EAAKiB,4BAA8BjB,EAAKiB,4BAA4BH,KAAjCC,EAAAf,IACnCA,EAAKkB,wBAA0BlB,EAAKkB,wBAAwBJ,KAA7BC,EAAAf,IAC/BA,EAAKmB,yBAA2BnB,EAAKmB,yBAAyBL,KAA9BC,EAAAf,IAChCA,EAAKoB,iBAAmBpB,EAAKoB,iBAAiBN,KAAtBC,EAAAf,IAExBA,EAAKqB,aAAeC,cAnBItB,oHAsB1BuB,kBAAA,WACMpB,KAAKkB,aAAaG,SACpBrB,KAAKkB,aAAaG,QAAQC,WAI9BN,yBAAA,WACEhB,KAAKuB,SAAS,SAAAC,GACZ,MAAO,CACLf,oBAAqBe,EAAUf,yBAKrCF,mCAAA,SAAmCL,GACjC,IAAII,EAAkB,GAUtB,OARAmB,OAAOC,KAAKxB,EAAiByB,QAAjB,QACTC,OAAO,SAAAC,GAAK,QAAK3B,EAAiByB,QAAjB,OAAmCE,GAAOC,QAC3DC,QAAQ,SAAAF,GACP,IAAIG,EAAO9B,EAAiByB,QAAjB,OAAmCE,GAAOC,MAErDxB,EAAgBuB,GAASI,MAAMC,QAAQF,EAAKG,cAAnBC,EAAuCJ,EAAKG,cAAgBH,EAAKG,eAGvF7B,KAGTI,yBAAA,SAAyB2B,GAAqC,IAAAC,EAAAtC,KAC5DA,KAAKJ,MAAMO,kBAAkB4B,QAAQ,SAAA7B,GAC/BA,EAAiBqC,KAAOF,EAAEG,cAAcC,aAAa,YACvDH,EAAKf,SAAS,CACZrB,iBAAkBA,EAClBI,gBAAiBgC,EAAK/B,mCAAmCL,UAMjEW,aAAA,SAAawB,GACXrC,KAAKuB,SAAS,CACZnB,KAAMiC,EAAEK,OAAOC,WAInB7B,4BAAA,SAA4BuB,GAC1BrC,KAAKuB,SAAS,SAAAC,GACZ,MAAO,CACLhB,qBAAsBgB,EAAUhB,uBAIpC6B,EAAEO,oBAGJ3B,iBAAA,SAAiBoB,GACfrC,KAAKuB,SAAS,CACZlB,SAAUgC,EAAEK,OAAOG,aAIvB9B,wBAAA,SAAwBsB,GAA4D,IAAAS,EAAA9C,KAC9E0C,EAASL,EAAEK,OAEf1C,KAAKuB,SAAS,SAAAC,GACZ,IAAIlB,EAAkBkB,EAAUlB,gBAC5B0B,EAAOc,EAAK7C,MAAMC,iBAAiByB,QAA5B,OAA8Ce,EAAOK,MAAMjB,MAEtE,OAAQE,EAAKgB,MACX,IAAK,SACH1C,EAAgBoC,EAAOK,MAAQL,EAAOC,MAEtC,MAEF,IAAK,WACH,IAAIM,EAAQ3C,EAAgBoC,EAAOK,MAAMG,QAAQR,EAAOC,OAEpDD,EAAM,SACH,IAAMO,GACT3C,EAAgBoC,EAAOK,MAAMI,KAAKT,EAAOC,OAGvCM,GAAS,GACX3C,EAAgBoC,EAAOK,MAAMK,OAAOH,EAAO,GAI/C,MAEF,IAAK,SACH,IAAII,EAASrB,EAAKqB,OAEdX,EAAM,QACRpC,EAAgBoC,EAAOK,MAAQM,EAAO,GAEtC/C,EAAgBoC,EAAOK,MAAQM,EAAO,GAGxC,MAEF,IAAK,QACH/C,EAAgBoC,EAAOK,MAAQO,SAASZ,EAAOC,OAKnD,MAAO,CACLrC,gBAAiBA,QAKvBiD,aAAA,WAAe,IAAAC,EAAAxD,KACT2B,EAAU,GAEdF,OAAOC,KAAK1B,KAAKC,MAAMC,iBAAiByB,QAA5B,QACTC,OAAO,SAAA6B,GAAG,QAAKD,EAAKvD,MAAMC,iBAAiByB,QAA5B,OAA8C8B,GAAK3B,QAClE4B,IAAI,SAAAD,GACgBD,EAAKvD,MAAMC,iBAAiByB,QAA5B,OAA8C8B,GAAK3B,MAAMK,eAEvDqB,EAAKvD,MAAMK,gBAAgBmD,KAC9C9B,EAAQ8B,GAAOD,EAAKvD,MAAMK,gBAAgBmD,MAIhD,IAAIE,EAASC,oBACX,CACEjC,QAASA,EACTtB,SAAUL,KAAKC,MAAMI,SAAWL,KAAKC,MAAMG,UAAOyD,GAEpD,CAAEC,kBAAkB,EAAMC,YAAa,aAGzC,aAAc/D,KAAKC,MAAMC,iBAAiBqC,GAA1C,IAAgDyB,mBAAmBhE,KAAKC,MAAMG,MAA9E,QACEuD,EAAS,IAAMA,EAAS,OAI5BM,OAAA,WAAS,IAAAC,EAAAlE,KACHmE,EAASnE,KAAKuD,eAElB,OACEa,EAAA,qBAAKC,UAAU,2CACbD,EAAA,qBAAKC,UAAU,SACbD,EAAA,qBAAKC,UAAS,cAAerE,KAAKC,MAAMO,oBAAsB,kBAAoB,KAChF4D,EAAA,qBAAKC,UAAU,kBACbD,EAAA,qBAAKC,UAAU,oBACbD,EAAA,mBAAGE,KAAMH,EAAQzB,OAAO,UACtB0B,EAAA,qBAAKG,IAAKJ,EAAQK,IAAI,aAG1BJ,EAAA,qBAAKC,UAAU,kBACbD,EAAA,qBAAKC,UAAU,OACbD,EAAA,qBAAKC,UAAU,OACbD,EAAA,mBAAGE,KAAK,IAAIG,QAASzE,KAAKc,4BAA6ByB,GAAG,8BACxD6B,EAAA,cAACM,EAAA,EAAD,CAAQC,KAAM,MAEhBP,EAAA,cAACQ,EAAA,EAAD,CAAqBC,UAAU,MAAMnC,OAAO,8BAA5C,qBAIF0B,EAAA,qBAAKC,UAAU,kBACbD,EAAA,mBAAGE,KAAMH,EAAQzB,OAAO,SAASH,GAAG,qBAClC6B,EAAA,cAACM,EAAA,EAAD,CAAgBC,KAAM,MAExBP,EAAA,cAACQ,EAAA,EAAD,CAAqBC,UAAU,MAAMnC,OAAO,qBAA5C,sBAON0B,EAAA,qBAAKC,UAAU,eACbD,EAAA,cAACU,EAAA,EAAD,CACEC,UAAU,UACVC,OAAQhF,KAAKC,MAAMQ,mBACnBwE,OAAQjF,KAAKgB,0BAEboD,EAAA,cAACc,EAAA,EAAD,CAAgBC,SAAO,EAACC,OAAK,GAC1BpF,KAAKC,MAAMC,iBAAiBqC,IAE/B6B,EAAA,cAACiB,EAAA,EAAD,KACGrF,KAAKJ,MAAMO,kBAAkBuD,IAAI,SAAA4B,GAChC,OACElB,EAAA,cAACmB,EAAA,EAAD,CACE9B,IAAK6B,EAAiB/C,GACtBkC,QAASP,EAAKxD,yBACd8E,UAASF,EAAiB/C,IAEzB+C,EAAiB/C,QAM5B6B,EAAA,uBACEqB,IAAKzF,KAAKkB,aACVmD,UAAU,2CACVqB,YAAY,mBACZ/C,MAAO3C,KAAKC,MAAMG,KAClBuF,SAAU3F,KAAKa,aACf+E,UAAW,OAGfxB,EAAA,uBAAOC,UAAU,oCAAjB,mDAIJD,EAAA,cAACyB,EAAA,EAAD,CAAUb,OAAQhF,KAAKC,MAAMO,qBAC3B4D,EAAA,qBAAKC,UAAU,gCACbD,EAAA,qBAAKC,UAAU,kBACbD,EAAA,qBAAKC,UAAU,kBACbD,EAAA,uBAAO0B,QAAQ,WAAWzB,UAAS,qCAAnC,YAGAD,EAAA,qBAAKC,UAAU,YACbD,EAAA,qBAAKC,UAAU,gCACbD,EAAA,uBACE7B,GAAG,WACHQ,KAAK,WACLC,KAAK,WACLqB,UAAU,uBACVsB,SAAU3F,KAAKiB,iBACf4B,QAAS7C,KAAKC,MAAMI,WAEtB+D,EAAA,uBAAOC,UAAU,uBAAuByB,QAAQ,gBAIrDrE,OAAOC,KAAK1B,KAAKC,MAAMC,iBAAiByB,QAA5B,QACVC,OAAO,SAAA6B,GAAG,QAAKS,EAAKjE,MAAMC,iBAAiByB,QAA5B,OAA8C8B,GAAK3B,QAClE4B,IAAI,SAAAD,GACH,IAAI5B,EAAQqC,EAAKjE,MAAMC,iBAAiByB,QAA5B,OAA8C8B,GAAK3B,MAC3DS,EAAK,YAAckB,EAEvB,OACEW,EAAA,qBAAKC,UAAU,iBAAiBZ,IAAKA,GACnCW,EAAA,uBACE0B,QAASvD,EACT8B,UAAS,4BAA4C,WAAfxC,EAAMmB,KAAoB,OAAS,IAAhE,QACT+C,MAAOtC,GAENA,GAEHW,EAAA,qBAAKC,UAAU,YACG,WAAfxC,EAAMmB,KACLoB,EAAA,wBACE7B,GAAIA,EACJQ,KAAMU,EACNY,UAAU,gBACV1B,MAAOuB,EAAKjE,MAAMK,gBAAgBmD,GAClCkC,SAAUzB,EAAKnD,yBAEdc,EAAMwB,OAAOK,IAAI,SAAAf,GAAK,OACrByB,EAAA,wBAAQX,IAAKd,GAAQA,MAIzB,GAGc,aAAfd,EAAMmB,KACHnB,EAAMwB,OAAOK,IAAI,SAAAf,GAAK,OACpByB,EAAA,qBAAKC,UAAU,+BAA+BZ,IAAKd,GACjDyB,EAAA,uBACErB,KAAMU,EACNT,KAAK,WACLqB,UAAU,uBACV9B,GAAIA,EAAK,IAAMI,EACfE,SAA6D,IAApDqB,EAAKjE,MAAMK,gBAAgBmD,GAAKP,QAAQP,GACjDgD,SAAUzB,EAAKnD,wBACf4B,MAAOA,IAETyB,EAAA,uBAAOC,UAAU,uBAAuByB,QAASvD,EAAK,IAAMI,GACzDA,MAIP,GAEY,UAAfd,EAAMmB,KACLoB,EAAA,uBACE7B,GAAIA,EACJQ,KAAMU,EACNT,KAAK,QACLqB,UAAU,uBACV2B,IAAKnE,EAAMwB,OAAO,GAClB4C,IAAKpE,EAAMwB,OAAO,GAClBsC,SAAUzB,EAAKnD,wBACf4B,MAAOuB,EAAKjE,MAAMK,gBAAgBmD,KAGpC,GAGc,WAAf5B,EAAMmB,KACLoB,EAAA,qBAAKC,UAAU,gCACbD,EAAA,uBACE7B,GAAIA,EACJQ,KAAMU,EACNT,KAAK,WACLqB,UAAU,uBACVsB,SAAUzB,EAAKnD,wBACf8B,QAASqB,EAAKjE,MAAMK,gBAAgBmD,IAAQ5B,EAAMwB,OAAO,KAE3De,EAAA,uBAAOC,UAAU,uBAAuByB,QAASvD,KAGnD,OAMZ6B,EAAA,qBAAKC,UAAU,cACbD,EAAA,uBAAOC,UAAU,4CAAjB,MACM,IACJD,EAAA,mBACEE,KAAI,iCAAmCtE,KAAKC,MAAMC,iBAAiB6C,KAA/D,WACJL,OAAO,SACP2B,UAAU,cAHZ,aAMK,IARP,4BAgBRD,EAAA,cAACyB,EAAA,EAAD,CAAUb,QAAShF,KAAKC,MAAMO,qBAC5B4D,EAAA,qBAAKC,UAAU,6BAAf,kBAEED,EAAA,qBAAKG,IAAK,gBAAiBC,IAAI,kBAvWNrD,iBCblB+E,sBACnB,SAAAA,EAAYtG,GAAc,OACxBE,EAAAC,KAAAC,KAAMJ,IADkBI,uHAI1BmG,gBAAA,SAAgB9D,GACd+D,SAASC,cAAchE,EAAEG,cAAcC,aAAa,SAAS6D,eAAe,CAAEC,MAAO,QAASC,SAAU,WAExGnE,EAAEO,oBAGJqB,OAAA,WAAS,IAAApE,EAAAG,KACP,OACEoE,EAAA,qBAAKC,UAAU,wBACbD,EAAA,qBAAKC,UAAU,sCACbD,EAAA,qBAAKC,UAAU,OACbD,EAAA,qBAAKC,UAAU,6CACbD,EAAA,qBAAKC,UAAU,qCACbD,EAAA,qBAAKC,UAAU,OACbD,EAAA,qBAAKC,UAAU,2EACbD,EAAA,qBAAKC,UAAU,2CACbD,EAAA,qBAAKC,UAAU,4BACbD,EAAA,qBAAKG,IAAK,eAAgBC,IAAI,mBAAmBH,UAAU,cAC3DD,EAAA,mBAAGC,UAAU,mBAAb,mJAIAD,EAAA,mBAAGC,UAAU,wBAAb,uFAGAD,EAAA,qBAAKC,UAAU,WACbD,EAAA,mBACEE,KAAK,iBACLD,UAAU,sEACVI,QAAS,SAAApC,GAAC,OAAIxC,EAAKsG,gBAAgB9D,KAEnC+B,EAAA,cAACM,EAAA,EAAD,CAAQL,UAAU,OAAOM,KAAM,KALjC,iBAQAP,EAAA,oBAAIC,UAAU,cACdD,EAAA,mBACEC,UAAU,iDACVC,KAAK,kDAELF,EAAA,cAACM,EAAA,EAAD,CAAcL,UAAU,OAAOM,KAAM,KAJvC,QAOAP,EAAA,mBACEC,UAAU,kBACVC,KAAK,iDACL5B,OAAO,UAEN1C,KAAKJ,MAAM6G,mBAS5BrC,EAAA,qBAAKC,UAAU,iDACbD,EAAA,qBAAKC,UAAU,qCACbD,EAAA,qBAAKC,UAAU,OACbD,EAAA,qBAAKC,UAAU,+DACbD,EAAA,cAACsC,EAAD,CAAWvG,kBAAmBH,KAAKJ,MAAMO,+BAjEzBgB,wCCFpCwF,IAAkBC,iBAAiB,aAAcC,SAM5BC,0LACnBC,sBAAA,WACE,IAAI5G,EAAoBH,KAAKJ,MAAMO,kBAAkBuD,IAAI,SAACxD,EAAkB+C,EAAO+D,GAEjF,OAAI/D,IAAU+D,EAAMC,OAAS,EAEzB7C,EAAA,cAACA,EAAA,SAAD,CAAgBX,IAAKR,GACnBmB,EAAA,0BAAOlE,EAAiBqC,KAM1BU,IAAU+D,EAAMC,OAAS,EAEzB7C,EAAA,cAACA,EAAA,SAAD,CAAgBX,IAAKR,GACnBmB,EAAA,0BAAOlE,EAAiBqC,IACvB,QAML6B,EAAA,cAACA,EAAA,SAAD,CAAgBX,IAAKR,GACnBmB,EAAA,0BAAOlE,EAAiBqC,IACvB,QAKP,OACE6B,EAAA,cAACA,EAAA,SAAD,gBACUA,EAAA,sCADV,SACsCjE,EADtC,kBACuEiE,EAAA,mCADvE,mCAEQA,EAAA,qCAFR,gDAOJH,OAAA,WACE,OACEG,EAAA,qBAAK7B,GAAG,gBAAgB8B,UAAU,wBAChCD,EAAA,qBAAKC,UAAU,aACbD,EAAA,oBAAIC,UAAU,yBAAd,cACAD,EAAA,mBAAGC,UAAU,yBAAb,8FAIAD,EAAA,qBAAKC,UAAU,YACbD,EAAA,qBAAKC,UAAU,gCACbD,EAAA,oBAAIC,UAAU,0BAAd,YACAD,EAAA,qBAAKC,UAAU,wBACbD,EAAA,2HACAA,EAAA,cAAC8C,EAAA,EAAD,CAAmB7C,UAAU,0BAA0B8C,MAAOC,KAC3D,sDAEHhD,EAAA,uBAAIpE,KAAK+G,yBACT3C,EAAA,yBACAA,EAAA,kIAEQA,EAAA,qCAFR,oCAE6DA,EAAA,uBAAIpE,KAAKJ,MAAMO,kBAAkB,GAAGoC,IAAQ,IAFzG,wBAGuB6B,EAAA,kCAHvB,oCAKAA,EAAA,cAAC8C,EAAA,EAAD,CAAmB7C,UAAU,0BAA0B8C,MAAOC,KAA9D,mCACsCpH,KAAKJ,MAAMO,kBAAkB,GAAGoC,GADtE,mCAGA6B,EAAA,yBACAA,EAAA,mBAAGC,UAAU,QAAb,kEACkE,IAChED,EAAA,mBAAGE,KAAK,+CAA+C5B,OAAO,SAAS2E,IAAI,YAA3E,iBAEK,IAJP,iCAKgCjD,EAAA,sCALhC,oCAKsFA,EAAA,+BALtF,yDAQAA,EAAA,cAAC8C,EAAA,EAAD,CAAmB7C,UAAU,0BAA0B8C,MAAOC,KAA9D,mCACsCpH,KAAKJ,MAAMO,kBAAkB,GAAGoC,GADtE,2DAON6B,EAAA,qBAAKC,UAAU,OACbD,EAAA,qBAAKC,UAAU,gCACbD,EAAA,oBAAIC,UAAU,0BAAd,OACAD,EAAA,qBAAKC,UAAU,wBACbD,EAAA,mBAAGC,UAAU,QAAb,4FAIAD,EAAA,kFACAA,EAAA,cAAC8C,EAAA,EAAD,CAAmB7C,UAAU,+BAA+B8C,MAAOC,KAAnE,0CAIAhD,EAAA,mGAC4E,IACzEpE,KAAKJ,MAAMO,kBAAkB,GAAGoC,GAFnC,uBAIA6B,EAAA,cAAC8C,EAAA,EAAD,CAAmB7C,UAAU,+BAA+B8C,MAAOC,KAAnE,wBAC2BpH,KAAKJ,MAAMO,kBAAkB,GAAG4C,MAG3DqB,EAAA,yEACAA,EAAA,cAAC8C,EAAA,EAAD,CACE7C,UAAU,+BACViD,SAAS,aACTH,MAAOC,KAHT,kEAKOpH,KAAKJ,MAAMO,kBAAkB,GAAG4C,KALvC,4HAvG2B5B,iBCNtBoG,kLACnBtD,OAAA,WACE,OACEG,EAAA,qBAAKC,UAAU,yEACbD,EAAA,yBACEA,EAAA,qBAAKC,UAAU,YACbD,EAAA,qBAAKC,UAAU,kBACbD,EAAA,qBAAKG,IAAG,OAASvE,KAAKJ,MAAM2C,GAApB,YAAmCiC,IAAKxE,KAAKJ,MAAM2C,OAG/D6B,EAAA,oBAAIC,UAAU,8BAA8BrE,KAAKJ,MAAM2C,IACvD6B,EAAA,mBAAGC,UAAU,+BAA+BrE,KAAKJ,MAAMmD,OAEzDqB,EAAA,qBAAKC,UAAU,eACbD,EAAA,mBACEE,KAAM,iCAAmCtE,KAAKJ,MAAMmD,KACpDsB,UAAU,iDAEVD,EAAA,cAACM,EAAA,EAAD,CAAQL,UAAU,OAAOM,KAAM,KAJjC,4BAdoCxD,iBCCzBqG,kLACnBvD,OAAA,WACE,OACEG,EAAA,qBAAK7B,GAAG,qBAAqB8B,UAAU,4BACrCD,EAAA,qBAAKC,UAAU,aACbD,EAAA,oBAAIC,UAAU,yBAAd,sBACAD,EAAA,mBAAGC,UAAU,yBAAb,0DAEED,EAAA,yBAFF,2EAKAA,EAAA,qBAAKC,UAAU,OACZrE,KAAKJ,MAAMO,kBAAkBuD,IAAI,SAACxD,EAAkBuD,GAAnB,OAChCW,EAAA,qBAAKC,UAAU,gCAAgCZ,IAAKA,GAClDW,EAAA,cAACqD,EAAqBvH,MAG1BkE,EAAA,qBAAKC,UAAU,iCACbD,EAAA,qBAAKC,UAAU,yEACbD,EAAA,qBAAKC,UAAU,eACbD,EAAA,oBAAIC,UAAU,WAAd,gCACAD,EAAA,+HAGAA,EAAA,qFAEFA,EAAA,qBAAKC,UAAU,eACbD,EAAA,mBAAGE,KAAK,6CAA6CD,UAAU,6BAA/D,0BA3B6BlD,iBCP1BuG,kLACnBzD,OAAA,WACE,OACEG,EAAA,qBAAK7B,GAAG,MAAM8B,UAAU,QACtBD,EAAA,qBAAKC,UAAU,aACbD,EAAA,oBAAIC,UAAU,8BAAd,8BAEAD,EAAA,qBAAKC,UAAU,OACbD,EAAA,qBAAKC,UAAU,wBACbD,EAAA,oBAAIC,UAAU,MAAd,yCACAD,EAAA,yLAKFA,EAAA,qBAAKC,UAAU,wBACbD,EAAA,oBAAIC,UAAU,MAAd,8CACAD,EAAA,wNAKFA,EAAA,qBAAKC,UAAU,wBACbD,EAAA,oBAAIC,UAAU,MAAd,2CACAD,EAAA,uSAMFA,EAAA,qBAAKC,UAAU,wBACbD,EAAA,oBAAIC,UAAU,MAAd,oFACAD,EAAA,sLAKFA,EAAA,qBAAKC,UAAU,wBACbD,EAAA,oBAAIC,UAAU,MAAd,kCACAD,EAAA,4HAEFA,EAAA,qBAAKC,UAAU,wBACbD,EAAA,oBAAIC,UAAU,MAAd,+BACAD,EAAA,2QA3CmBjD,sBCA7BkC,EAAqB,GAEVsE,WACL,CACNR,MAAOQ,WAEJC,MAAOvE,EAAS,CAAC,cAAe,WAChCrB,KAAK,CACJgB,KAAM,SACNK,OAAQA,EACRlB,aAAckB,EAAO,KAEzBwE,KAAMF,WAEHC,MAAOvE,EAAS,CAAC,UAAW,YAC5BrB,KAAK,CACJgB,KAAM,SACNK,OAAQA,EACRlB,aAAckB,EAAO,KAEzByE,IAAKH,UAEFI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,WAAY,YAAa,WAAY,MAAO,QAAS,YACtFrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElB6F,UAAWL,WAER3B,IAAI,GACJC,IAAI,KACJjE,KAAK,CACJgB,KAAM,QACNK,OAAQ,CAAC,EAAG,KACZlB,aAAc,KAElB8F,SAAUN,UAEPI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,QAAS,OAAQ,OAAQ,UAAW,SAAU,OAAQ,MAAO,WAC9FrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElB+F,UAAWP,UAERI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,SAAU,QAAS,SAAU,QAAS,SAAU,WAAY,MAAO,UACpGrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElBgG,YAAaR,UAEVI,GACCJ,WAAaC,MAAOvE,EAAS,CAAC,OAAQ,iBAAkB,iBAAkB,QAAS,aAAc,eAElGrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElBiG,kBAAmBT,WAEhB3B,IAAI,GACJC,IAAI,KACJjE,KAAK,CACJgB,KAAM,QACNK,OAAQ,CAAC,EAAG,KACZlB,aAAc,KAElBkG,WAAYV,UAETI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,SAAU,QAAS,WAAY,QAAS,YACzErB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElBmG,iBAAkBX,WAEf3B,IAAI,GACJC,IAAI,KACJjE,KAAK,CACJgB,KAAM,QACNK,OAAQ,CAAC,EAAG,KACZlB,aAAc,KAElBoG,gBAAiBZ,UAEdI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,SAAU,QAAS,SAAU,QAAS,SAAU,WAAY,MAAO,UACpGrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElBqG,QAASb,UAENI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,SAAU,UAAW,QAAS,SAAU,aACzErB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElBsG,aAAcd,UAEXI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,QAAS,OAAQ,OAAQ,UAAW,SAAU,OAAQ,MAAO,WAC9FrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElBuG,KAAMf,UAEHI,GACCJ,WAEGC,MACEvE,EAAS,CACR,QACA,MACA,eACA,QACA,OACA,QACA,SACA,OACA,SACA,YACA,OACA,eAIPrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElBwG,QAAShB,UAENI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,QAAS,eAAgB,OAAQ,SAAU,MAAO,UAAW,QAC9FrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElByG,MAAOjB,UAEJI,GACCJ,WAEGC,MACEvE,EAAS,CACR,YACA,eACA,YACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,UACA,WAIPrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElB0G,KAAMlB,UAEHI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,SAAU,SAAU,OAAQ,QAAS,QAAS,YAAa,WAC5FrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,OAGnB2G,YCxLCzF,EAAqB,GAEVsE,WACL,CACNoB,OAAQpB,UAELI,GACCJ,WAEGC,MACEvE,EAAS,CACR,QACA,OACA,WACA,QACA,OACA,aACA,aACA,aACA,OACA,SACA,YACA,aACA,OACA,SACA,OACA,SACA,MACA,OACA,YAIPrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElB6G,SAAUrB,WAEPC,MAAM,CAAC,EAAG,IACV5F,KAAK,CACJgB,KAAM,SACNK,OAAQ,CAAC,EAAG,GACZlB,aAAc,IAElB8G,kBAAmBtB,WAEhBC,MAAOvE,EAAS,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC7DrB,KAAK,CACJgB,KAAM,SACNK,OAAQA,EACRlB,aAAc,MAElB+G,oBAAqBvB,WAElBC,MAAOvE,EAAS,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC7DrB,KAAK,CACJgB,KAAM,SACNK,OAAQA,EACRlB,aAAc,MAElBgH,cAAexB,WAEZ3B,IAAI,GACJC,IAAI,KACJjE,KAAK,CACJgB,KAAM,QACNK,OAAQ,CAAC,EAAG,KACZlB,aAAc,KAElBiH,YAAazB,WAEV3B,IAAI,GACJC,IAAI,KACJjE,KAAK,CACJgB,KAAM,QACNK,OAAQ,CAAC,EAAG,KACZlB,aAAc,MAElBkH,YAAa1B,WAEV3B,IAAI,GACJC,IAAI,KACJjE,KAAK,CACJgB,KAAM,QACNK,OAAQ,CAAC,EAAG,KACZlB,aAAc,MAElBmH,UAAW3B,WAER3B,IAAI,GACJC,IAAI,KACJjE,KAAK,CACJgB,KAAM,QACNK,OAAQ,CAAC,EAAG,KACZlB,aAAc,QAGnB2G,YCnGCzF,EAAqB,GAEVsE,WACL,CACN4B,KAAM5B,UAEHI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,QAAS,MAAO,eACjDrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,OAGnB2G,YCbYnB,WACL,CACNqB,SAAUrB,WAEPC,MAAM,CAAC,EAAG,IACV5F,KAAK,CACJgB,KAAM,SACNK,OAAQ,CAAC,EAAG,GACZlB,aAAc,MAGnB2G,YCXCzF,EAAqB,GAEVsE,WACL,CACN6B,QAAS7B,WAEN3B,IAAI,GACJC,IAAI,GACJjE,KAAK,CACJgB,KAAM,SACNK,OAAQ,CAAC,EAAG,IACZlB,aAAc,IAElBsH,WAAY9B,WAET+B,QAAQ,6CACR1H,KAAK,CACJgB,KAAM,SACNK,OAAQ,CAAC,OAAQ,WACjBlB,aAAc,SAElB4G,OAAQpB,UAELI,GACCJ,WAEGC,MACEvE,EAAS,CACR,QACA,OACA,WACA,QACA,OACA,aACA,aACA,aACA,OACA,SACA,YACA,aACA,OACA,SACA,OACA,SACA,MACA,OACA,YAIPrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,KAElBwH,WAAYhC,WAETC,MAAOvE,EAAS,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAC7DrB,KAAK,CACJgB,KAAM,SACNK,OAAQA,EACRlB,aAAc,QAGnB2G,YChEYnB,WACL,CACN6B,QAAS7B,WAEN3B,IAAI,GACJC,IAAI,IACJjE,KAAK,CACJgB,KAAM,SACNK,OAAQ,CAAC,EAAG,KACZlB,aAAc,IAElBsH,WAAY9B,WAET+B,QAAQ,6CACR1H,KAAK,CACJgB,KAAM,SACNK,OAAQ,CAAC,OAAQ,WACjBlB,aAAc,SAElByH,KAAMjC,UAAYI,GAChBJ,WAEG3B,IAAI,GACJC,IAAI,MAET4D,eAAgBlC,UAEb3B,IAAI,GACJC,IAAI,GACJ8B,GACCJ,WAEG3B,IAAI,GACJC,IAAI,MAEX6D,mBAAoBnC,UAEjB3B,IAAI,GACJC,IAAI,GACJ8B,GACCJ,WAEG3B,IAAI,GACJC,IAAI,MAEX8D,gBAAiBpC,WAEd3B,IAAI,GACJC,IAAI,KACP+D,oBAAqBrC,WAElB3B,IAAI,GACJC,IAAI,OAER6C,YCtDCzF,EAAqB,GCmDV4G,EAAA,CACb9J,kBA5C0C,CAC1C,CACEoC,GAAI,OACJQ,KAAM,mCACNpB,QDVWgG,SACL,CACN4B,KAAM5B,UAEHI,GAAGJ,WAAaC,MAAOvE,EAAS,CAAC,QAAS,MAAO,eACjDrB,KAAK,CACJgB,KAAM,WACNK,OAAQA,EACRlB,aAAc,OAGnB2G,aCCD,CACEvG,GAAI,SACJQ,KAAM,qCACNpB,QAASuI,GAEX,CACE3H,GAAI,YACJQ,KAAM,wCACNpB,QAASwI,GAEX,CACE5H,GAAI,WACJQ,KAAM,uCACNpB,QAASyI,GAEX,CACE7H,GAAI,SACJQ,KAAM,qCACNpB,QAAS0I,GAEX,CACE9H,GAAI,YACJQ,KAAM,wCACNpB,QAAS2I,GAEX,CACE/H,GAAI,YACJQ,KAAM,wCACNpB,QAAS4I,GAEX,CACEhI,GAAI,QACJQ,KAAM,oCACNpB,QAAS6I,KCzCEC,EAAA,iBAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAH,OACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,cAAeL,EAAYK,cAAeC,YAAaN,EAAYM,aACzEL,EAAAC,EAAAC,cAACI,EAAD,CAAQzE,WAAYkE,EAAYlE,WAAYtG,kBAAmB8J,EAAO9J,oBACtEyK,EAAAC,EAAAC,cAACK,EAAD,CAAehL,kBAAmB8J,EAAO9J,oBACzCyK,EAAAC,EAAAC,cAACM,EAAD,CAAmBjL,kBAAmB8J,EAAO9J,oBAC7CyK,EAAAC,EAAAC,cAACO,EAAD,6BCbJ,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6ECsBhCK,UAjBU,SAAAjB,GAAiC,IAA9BkB,EAA8BlB,EAA9BkB,SAAUC,EAAoBnB,EAApBmB,cACpC,OAAKA,EAGE1K,IAAM2J,cAAcgB,IAApBrK,OAAAsK,OAAA,CACLH,WACAC,iBACGA,EAAcG,OALV,oFCMgB7K,IAAM8K,cAAc,+CCH1BC,kLACnBjI,OAAA,WACE,OACEG,EAAA,qBAAKC,UAAU,sBACbD,EAAA,yBAAMpE,KAAKJ,MAAMuM,UACjB/H,EAAA,qBAAKC,UAAU,4BACbD,EAAA,oBAAIC,UAAU,QACdD,EAAA,qBAAKC,UAAU,0EACbD,EAAA,qBAAKC,UAAU,yCAAf,+BAC8BD,EAAA,mBAAGE,KAAK,6BAAR,YAD9B,IACgF,IAC9EF,EAAA,mBAAGE,KAAK,wBAAR,SAFF,KAE4CF,EAAA,mBAAGE,KAAK,6BAAR,aAF5C,OAEkG,IAChGF,EAAA,mBAAGE,KAAK,gCAAR,YAHF,KAKCtE,KAAKJ,MAAMoL,eAAiBhL,KAAKJ,MAAMqL,YACtC7G,EAAA,oBAAIC,UAAU,4CACZD,EAAA,oBAAIC,UAAU,8BACZD,EAAA,cAACgI,EAAAvB,EAAD,CAAMwB,GAAG,KAAT,SAEDrM,KAAKJ,MAAMoL,eACV5G,EAAA,oBAAIC,UAAU,8BACZD,EAAA,cAACgI,EAAAvB,EAAD,CAAMwB,GAAG,mBAAT,mBAGHrM,KAAKJ,MAAMqL,aACV7G,EAAA,oBAAIC,UAAU,8BACZD,EAAA,cAACgI,EAAAvB,EAAD,CAAMwB,GAAG,iBAAT,8BAKN,UA9BsBlL","file":"component---src-pages-index-tsx-7d91a1b50979c5fc72f7.js","sourcesContent":["import * as React from 'react';\nimport { stringify } from 'qs';\n\nimport { GoGear, GoLinkExternal } from 'react-icons/go';\nimport { Collapse, InputGroupButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport SpriteCollection from '../../types/spriteCollection';\n\ntype Props = {\n  spriteCollections: SpriteCollection[];\n};\n\ntype State = {\n  spriteCollection: SpriteCollection;\n  seed: string;\n  gravatar: boolean;\n  advancedOptions: {\n    [key: string]: any;\n  };\n  showAdvancedOptions: boolean;\n  spriteDropdownOpen: boolean;\n};\n\nexport default class Generator extends React.Component<Props, State> {\n  private seedInputRef: React.RefObject<HTMLInputElement>;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      spriteCollection: props.spriteCollections[0],\n      seed: '',\n      gravatar: false,\n      advancedOptions: this.getSpriteCollectionAdvancedOptions(props.spriteCollections[0]),\n      showAdvancedOptions: false,\n      spriteDropdownOpen: false\n    };\n\n    this.onChangeSpriteCollection = this.onChangeSpriteCollection.bind(this);\n    this.onChangeSeed = this.onChangeSeed.bind(this);\n    this.onToggleShowAdvancedOptions = this.onToggleShowAdvancedOptions.bind(this);\n    this.onChangeAdvancedOptions = this.onChangeAdvancedOptions.bind(this);\n    this.toggleSpriteDropdownOpen = this.toggleSpriteDropdownOpen.bind(this);\n    this.onChangeGravatar = this.onChangeGravatar.bind(this);\n\n    this.seedInputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.seedInputRef.current) {\n      this.seedInputRef.current.focus();\n    }\n  }\n\n  toggleSpriteDropdownOpen() {\n    this.setState(prevState => {\n      return {\n        spriteDropdownOpen: !prevState.spriteDropdownOpen\n      };\n    });\n  }\n\n  getSpriteCollectionAdvancedOptions(spriteCollection: SpriteCollection) {\n    let advancedOptions = {};\n\n    Object.keys(spriteCollection.options['fields'])\n      .filter(field => (spriteCollection.options['fields'][field]._meta ? true : false))\n      .forEach(field => {\n        let meta = spriteCollection.options['fields'][field]._meta;\n\n        advancedOptions[field] = Array.isArray(meta.defaultValue) ? [...meta.defaultValue] : meta.defaultValue;\n      });\n\n    return advancedOptions;\n  }\n\n  onChangeSpriteCollection(e: React.MouseEvent<HTMLDivElement>) {\n    this.props.spriteCollections.forEach(spriteCollection => {\n      if (spriteCollection.id === e.currentTarget.getAttribute('data-id')) {\n        this.setState({\n          spriteCollection: spriteCollection,\n          advancedOptions: this.getSpriteCollectionAdvancedOptions(spriteCollection)\n        });\n      }\n    });\n  }\n\n  onChangeSeed(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      seed: e.target.value\n    });\n  }\n\n  onToggleShowAdvancedOptions(e: React.MouseEvent) {\n    this.setState(prevState => {\n      return {\n        showAdvancedOptions: !prevState.showAdvancedOptions\n      };\n    });\n\n    e.preventDefault();\n  }\n\n  onChangeGravatar(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      gravatar: e.target.checked\n    });\n  }\n\n  onChangeAdvancedOptions(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) {\n    let target = e.target;\n\n    this.setState(prevState => {\n      let advancedOptions = prevState.advancedOptions;\n      let meta = this.state.spriteCollection.options['fields'][target.name]._meta;\n\n      switch (meta.type) {\n        case 'select':\n          advancedOptions[target.name] = target.value;\n\n          break;\n\n        case 'checkbox':\n          let index = advancedOptions[target.name].indexOf(target.value);\n\n          if (target['checked']) {\n            if (-1 === index) {\n              advancedOptions[target.name].push(target.value);\n            }\n          } else {\n            if (index > -1) {\n              advancedOptions[target.name].splice(index, 1);\n            }\n          }\n\n          break;\n\n        case 'switch':\n          let values = meta.values;\n\n          if (target['checked']) {\n            advancedOptions[target.name] = values[1];\n          } else {\n            advancedOptions[target.name] = values[0];\n          }\n\n          break;\n\n        case 'range':\n          advancedOptions[target.name] = parseInt(target.value);\n\n          break;\n      }\n\n      return {\n        advancedOptions: advancedOptions\n      };\n    });\n  }\n\n  getAvatarUrl() {\n    let options = {};\n\n    Object.keys(this.state.spriteCollection.options['fields'])\n      .filter(key => (this.state.spriteCollection.options['fields'][key]._meta ? true : false))\n      .map(key => {\n        let defaultValue = this.state.spriteCollection.options['fields'][key]._meta.defaultValue;\n\n        if (defaultValue !== this.state.advancedOptions[key]) {\n          options[key] = this.state.advancedOptions[key];\n        }\n      });\n\n    let params = stringify(\n      {\n        options: options,\n        gravatar: this.state.gravatar ? this.state.seed : undefined\n      },\n      { encodeValuesOnly: true, arrayFormat: 'brackets' }\n    );\n\n    return `/v2/${this.state.spriteCollection.id}/${encodeURIComponent(this.state.seed)}.svg${\n      params ? '?' + params : ''\n    }`;\n  }\n\n  render() {\n    let avatar = this.getAvatarUrl();\n\n    return (\n      <div className=\"min-vh-lg-100 d-flex align-items-center\">\n        <div className=\"w-100\">\n          <div className={`generator ${this.state.showAdvancedOptions ? 'position-sticky' : ''}`}>\n            <div className=\"generator-body\">\n              <div className=\"generator-avatar\">\n                <a href={avatar} target=\"_blank\">\n                  <img src={avatar} alt=\"avatar\" />\n                </a>\n              </div>\n              <div className=\"generator-head\">\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <a href=\"#\" onClick={this.onToggleShowAdvancedOptions} id=\"ShowAdvancedOptionsTooltip\">\n                      <GoGear size={20} />\n                    </a>\n                    <UncontrolledTooltip placement=\"top\" target=\"ShowAdvancedOptionsTooltip\">\n                      Advanced options\n                    </UncontrolledTooltip>\n                  </div>\n                  <div className=\"col text-right\">\n                    <a href={avatar} target=\"_blank\" id=\"OpenNewTabTooltip\">\n                      <GoLinkExternal size={20} />\n                    </a>\n                    <UncontrolledTooltip placement=\"top\" target=\"OpenNewTabTooltip\">\n                      Open in new tab\n                    </UncontrolledTooltip>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"input-group\">\n                <InputGroupButtonDropdown\n                  addonType=\"prepend\"\n                  isOpen={this.state.spriteDropdownOpen}\n                  toggle={this.toggleSpriteDropdownOpen}\n                >\n                  <DropdownToggle outline caret>\n                    {this.state.spriteCollection.id}\n                  </DropdownToggle>\n                  <DropdownMenu>\n                    {this.props.spriteCollections.map(spritecollection => {\n                      return (\n                        <DropdownItem\n                          key={spritecollection.id}\n                          onClick={this.onChangeSpriteCollection}\n                          data-id={spritecollection.id}\n                        >\n                          {spritecollection.id}\n                        </DropdownItem>\n                      );\n                    })}\n                  </DropdownMenu>\n                </InputGroupButtonDropdown>\n                <input\n                  ref={this.seedInputRef}\n                  className=\"form-control form-control-lg text-center\"\n                  placeholder=\"your-custom-seed\"\n                  value={this.state.seed}\n                  onChange={this.onChangeSeed}\n                  maxLength={512}\n                />\n              </div>\n              <small className=\"form-text text-muted text-center\">Don't use sensitive or personal data as seed!</small>\n            </div>\n          </div>\n\n          <Collapse isOpen={this.state.showAdvancedOptions}>\n            <div className=\"generator generator--options\">\n              <div className=\"generator-body\">\n                <div className=\"form-group row\">\n                  <label htmlFor=\"gravatar\" className={`col-sm-3 col-form-label py-0 pr-0`}>\n                    gravatar\n                  </label>\n                  <div className=\"col-sm-9\">\n                    <div className=\"custom-control custom-switch\">\n                      <input\n                        id=\"gravatar\"\n                        name=\"gravatar\"\n                        type=\"checkbox\"\n                        className=\"custom-control-input\"\n                        onChange={this.onChangeGravatar}\n                        checked={this.state.gravatar}\n                      />\n                      <label className=\"custom-control-label\" htmlFor=\"gravatar\" />\n                    </div>\n                  </div>\n                </div>\n                {Object.keys(this.state.spriteCollection.options['fields'])\n                  .filter(key => (this.state.spriteCollection.options['fields'][key]._meta ? true : false))\n                  .map(key => {\n                    let field = this.state.spriteCollection.options['fields'][key]._meta;\n                    let id = 'advanced_' + key;\n\n                    return (\n                      <div className=\"form-group row\" key={key}>\n                        <label\n                          htmlFor={id}\n                          className={`col-sm-3 col-form-label ${field.type !== 'select' ? 'py-0' : ''} pr-0`}\n                          title={key}\n                        >\n                          {key}\n                        </label>\n                        <div className=\"col-sm-9\">\n                          {field.type === 'select' ? (\n                            <select\n                              id={id}\n                              name={key}\n                              className=\"custom-select\"\n                              value={this.state.advancedOptions[key]}\n                              onChange={this.onChangeAdvancedOptions}\n                            >\n                              {field.values.map(value => (\n                                <option key={value}>{value}</option>\n                              ))}\n                            </select>\n                          ) : (\n                            ''\n                          )}\n\n                          {field.type === 'checkbox'\n                            ? field.values.map(value => (\n                                <div className=\"custom-control custom-switch\" key={value}>\n                                  <input\n                                    name={key}\n                                    type=\"checkbox\"\n                                    className=\"custom-control-input\"\n                                    id={id + '_' + value}\n                                    checked={this.state.advancedOptions[key].indexOf(value) !== -1}\n                                    onChange={this.onChangeAdvancedOptions}\n                                    value={value}\n                                  />\n                                  <label className=\"custom-control-label\" htmlFor={id + '_' + value}>\n                                    {value}\n                                  </label>\n                                </div>\n                              ))\n                            : ''}\n\n                          {field.type === 'range' ? (\n                            <input\n                              id={id}\n                              name={key}\n                              type=\"range\"\n                              className=\"d-block custom-range\"\n                              min={field.values[0]}\n                              max={field.values[1]}\n                              onChange={this.onChangeAdvancedOptions}\n                              value={this.state.advancedOptions[key]}\n                            />\n                          ) : (\n                            ''\n                          )}\n\n                          {field.type === 'switch' ? (\n                            <div className=\"custom-control custom-switch\">\n                              <input\n                                id={id}\n                                name={key}\n                                type=\"checkbox\"\n                                className=\"custom-control-input\"\n                                onChange={this.onChangeAdvancedOptions}\n                                checked={this.state.advancedOptions[key] == field.values[1]}\n                              />\n                              <label className=\"custom-control-label\" htmlFor={id} />\n                            </div>\n                          ) : (\n                            ''\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                <div className=\"form-group\">\n                  <small className=\"form-text text-muted text-center d-block\">\n                    See{' '}\n                    <a\n                      href={`https://www.npmjs.com/package/${this.state.spriteCollection.name}#options`}\n                      target=\"_blank\"\n                      className=\"text-reset\"\n                    >\n                      README.md\n                    </a>{' '}\n                    for advanced options\n                  </small>\n                </div>\n              </div>\n            </div>\n          </Collapse>\n\n          <Collapse isOpen={!this.state.showAdvancedOptions}>\n            <div className=\"generator-create-your-own\">\n              Create your own\n              <img src={'img/arrow.svg'} alt=\"arrow\" />\n            </div>\n          </Collapse>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { GoMarkGithub, GoBook } from 'react-icons/go';\nimport Generator from './teaser/generator';\nimport spriteCollection from '../types/spriteCollection';\n\ntype Props = {\n  stargazers: number;\n  spriteCollections: spriteCollection[];\n};\n\nexport default class Teaser extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  onClickScrollTo(e: React.MouseEvent<HTMLAnchorElement>) {\n    document.querySelector(e.currentTarget.getAttribute('href')).scrollIntoView({ block: 'start', behavior: 'smooth' });\n\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"teaser gradient-blue\">\n        <div className=\"container teaser-container-desktop\">\n          <div className=\"row\">\n            <div className=\"col-12 col-lg-6 teaser-brand py-5 py-lg-0\">\n              <div className=\"container teaser-container-mobile\">\n                <div className=\"row\">\n                  <div className=\"col-12 offset-md-2 col-md-8 offset-lg-0 col-lg-11 offset-xl-1 col-xl-10\">\n                    <div className=\"min-vh-lg-100 d-flex align-items-center\">\n                      <div className=\"text-center text-lg-left\">\n                        <img src={'img/logo.svg'} alt=\"DiceBear Avatars\" className=\"logo mb-5\" />\n                        <p className=\"text-white lead\">\n                          Avatars is an avatar placeholder library for designers and developers. You can choose between\n                          simple identicons and lovely designed characters.\n                        </p>\n                        <p className=\"text-white lead mb-5\">\n                          And best of all: We provide a simple and free HTTP API that you can use right away!\n                        </p>\n                        <div className=\"mb-lg-4\">\n                          <a\n                            href=\"#introductions\"\n                            className=\"btn btn-light d-inline-flex align-items-center mr-sm-4 mb-2 mb-sm-0\"\n                            onClick={e => this.onClickScrollTo(e)}\n                          >\n                            <GoBook className=\"mr-1\" size={20} />\n                            Documentation\n                          </a>\n                          <br className=\"d-sm-none\" />\n                          <a\n                            className=\"btn btn-light d-inline-flex align-items-center\"\n                            href=\"https://github.com/DiceBear/avatars/stargazers\"\n                          >\n                            <GoMarkGithub className=\"mr-1\" size={20} />\n                            Star\n                          </a>\n                          <a\n                            className=\"btn btn-tooltip\"\n                            href=\"https://github.com/DiceBear/avatars/stargazers\"\n                            target=\"_blank\"\n                          >\n                            {this.props.stargazers}\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-12 col-lg-6 teaser-generator py-4 py-lg-0\">\n              <div className=\"container teaser-container-mobile\">\n                <div className=\"row\">\n                  <div className=\"col-12 offset-md-2 col-md-8 offset-lg-1 col-lg-11 col-xl-10\">\n                    <Generator spriteCollections={this.props.spriteCollections} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/esm/prism-light';\nimport js from 'react-syntax-highlighter/dist/esm/languages/prism/javascript';\nimport prism from 'react-syntax-highlighter/dist/esm/styles/prism/prism';\n\nimport SpriteCollection from '../types/spriteCollection';\n\n// @ts-ignore\nSyntaxHighlighter.registerLanguage('javascript', js);\n\ntype Props = {\n  spriteCollections: SpriteCollection[];\n};\n\nexport default class Introductions extends React.Component<Props> {\n  getHttpApiDescription() {\n    let spriteCollections = this.props.spriteCollections.map((spriteCollection, index, array) => {\n      // Is penultimate entry\n      if (index === array.length - 1) {\n        return (\n          <React.Fragment key={index}>\n            <code>{spriteCollection.id}</code>\n          </React.Fragment>\n        );\n      }\n\n      // Is last entry\n      if (index === array.length - 2) {\n        return (\n          <React.Fragment key={index}>\n            <code>{spriteCollection.id}</code>\n            {' or '}\n          </React.Fragment>\n        );\n      }\n\n      return (\n        <React.Fragment key={index}>\n          <code>{spriteCollection.id}</code>\n          {', '}\n        </React.Fragment>\n      );\n    });\n\n    return (\n      <React.Fragment>\n        Replace <code>:sprites</code> with {spriteCollections}. The value of <code>:seed</code> can be anything you like\n        - but <strong>don't</strong> use any sensitive or personal data here!\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"introductions\" className=\"min-vh-100 pt-5 pb-6\">\n        <div className=\"container\">\n          <h2 className=\"display-1 text-center\">How to use</h2>\n          <p className=\"mb-6 text-center lead\">\n            You can start directly with our free HTTP-API or alternatively use the JavaScript library.\n          </p>\n\n          <div className=\"row mb-5\">\n            <div className=\"col-12 offset-xl-1 col-xl-10\">\n              <h4 className=\"text-muted text-center\">HTTP-API</h4>\n              <div className=\"rounded bg-light p-3\">\n                <p>Our free HTTP-API is the easiest way to use Avatars. Just use the following URL as image source.</p>\n                <SyntaxHighlighter className=\"bg-white border rounded\" style={prism}>\n                  {'https://avatars.dicebear.com/v2/:sprites/:seed.svg'}\n                </SyntaxHighlighter>\n                <p>{this.getHttpApiDescription()}</p>\n                <hr />\n                <p>\n                  The used sprite collection may offer additional options, which can be set using the GET parameter\n                  named <code>options</code>. For example, to create a happy <i>{this.props.spriteCollections[0].id}</i>{' '}\n                  avatar with the seed <code>john</code>, the following URL can be used:\n                </p>\n                <SyntaxHighlighter className=\"bg-white border rounded\" style={prism}>\n                  {`https://avatars.dicebear.com/v2/${this.props.spriteCollections[0].id}/john.svg?options[mood][]=happy`}\n                </SyntaxHighlighter>\n                <hr />\n                <p className=\"mb-0\">\n                  You also can use the HTTP API as fallback for Gravatar. Use the{' '}\n                  <a href=\"https://en.gravatar.com/site/implement/hash/\" target=\"_blank\" rel=\"nofollow\">\n                    Gravatar hash\n                  </a>{' '}\n                  as seed and add the parameter <code>gravatar</code> to your URL. With the parameter <code>s</code> you\n                  can also define the size of the Gravatar avatar.\n                </p>\n                <SyntaxHighlighter className=\"bg-white border rounded\" style={prism}>\n                  {`https://avatars.dicebear.com/v2/${this.props.spriteCollections[0].id}/48c424d839214264fc7f65b52235467c.svg?gravatar&s=248`}\n                </SyntaxHighlighter>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-12 offset-xl-1 col-xl-10\">\n              <h4 className=\"text-muted text-center\">NPM</h4>\n              <div className=\"rounded bg-light p-3\">\n                <p className=\"mb-4\">\n                  Choose NPM if you want to use a spriteCollection that is not available via the HTTP-API.\n                </p>\n\n                <p>Install the Avatars package with the following command.</p>\n                <SyntaxHighlighter className=\"mb-4 bg-white border rounded\" style={prism}>\n                  {`$ npm install --save @dicebear/avatars`}\n                </SyntaxHighlighter>\n\n                <p>\n                  You also need to add a sprite collection. In our example, we will use the{' '}\n                  {this.props.spriteCollections[0].id} sprite collection.\n                </p>\n                <SyntaxHighlighter className=\"mb-4 bg-white border rounded\" style={prism}>\n                  {`$ npm install --save ${this.props.spriteCollections[0].name}`}\n                </SyntaxHighlighter>\n\n                <p>Now you are ready to create your first Avatar.</p>\n                <SyntaxHighlighter\n                  className=\"mb-3 bg-white border rounded\"\n                  language=\"javascript\"\n                  style={prism}\n                >{`import Avatars from '@dicebear/avatars';\nimport sprites from '${this.props.spriteCollections[0].name}';\n\nlet options = {};\nlet avatars = new Avatars(sprites(options));\nlet svg = avatars.create('custom-seed');`}</SyntaxHighlighter>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { GoBook } from 'react-icons/go';\n\nimport SpriteCollectionType from '../../types/spriteCollection';\n\ntype Props = SpriteCollectionType;\n\nexport default class SpriteCollection extends React.Component<Props> {\n  render() {\n    return (\n      <div className=\"bg-white p-4 rounded h-100 d-flex flex-column justify-content-between\">\n        <div>\n          <div className=\"row pb-2\">\n            <div className=\"offset-3 col-6\">\n              <img src={`/v2/${this.props.id}/seed.svg`} alt={this.props.id} />\n            </div>\n          </div>\n          <h3 className=\"display-3 text-center mb-0\">{this.props.id}</h3>\n          <p className=\"text-muted text-center mb-5\">{this.props.name}</p>\n        </div>\n        <div className=\"text-center\">\n          <a\n            href={'https://www.npmjs.com/package/' + this.props.name}\n            className=\"btn btn-dark d-inline-flex align-items-center\"\n          >\n            <GoBook className=\"mr-1\" size={20} />\n            Read documentation\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport SpriteCollection from './spriteCollections/spriteCollection';\nimport SpriteCollectionType from '../types/spriteCollection';\n\ntype Props = {\n  spriteCollections: SpriteCollectionType[];\n};\n\nexport default class SpriteCollections extends React.Component<Props> {\n  render() {\n    return (\n      <div id=\"sprite-collections\" className=\"min-vh-100 py-5 bg-light\">\n        <div className=\"container\">\n          <h2 className=\"display-1 text-center\">Sprite Collections</h2>\n          <p className=\"mb-6 text-center lead\">\n            Do you want to create male, female or abstract avatars?\n            <br />\n            You have the choice between several lovely designed sprite collections.\n          </p>\n          <div className=\"row\">\n            {this.props.spriteCollections.map((spriteCollection, key) => (\n              <div className=\"col-12 col-md-6 col-lg-4 mb-4\" key={key}>\n                <SpriteCollection {...spriteCollection} />\n              </div>\n            ))}\n            <div className=\"col-12 col-md-6 col-lg-4 mb-4\">\n              <div className=\"bg-white p-4 rounded h-100 d-flex flex-column justify-content-between\">\n                <div className=\"text-center\">\n                  <h4 className=\"h5 mb-4\">Your sprite collection here?</h4>\n                  <p>\n                    You are a designer or developer and would like to contribute with a self-designed sprite collection?\n                  </p>\n                  <p>Create an issue so that we can add your work to the list.</p>\n                </div>\n                <div className=\"text-center\">\n                  <a href=\"https://github.com/DiceBear/avatars/issues\" className=\"btn btn-outline-dark mx-5\">\n                    Create issue\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport default class Faq extends React.Component {\n  render() {\n    return (\n      <div id=\"faq\" className=\"py-5\">\n        <div className=\"container\">\n          <h2 className=\"display-1 text-center mb-6\">Frequently Asked Questions</h2>\n\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6 mb-5\">\n              <h4 className=\"h5\">What is this library best suited for?</h4>\n              <p>\n                DiceBear Avatars is best suited for designers and developers to create avatar placeholders. But you are\n                free to use the generated avatars for other purposes.\n              </p>\n            </div>\n            <div className=\"col-12 col-md-6 mb-5\">\n              <h4 className=\"h5\">Does a seed always return the same avatar?</h4>\n              <p>\n                Yes, as long as the same version of a sprite collection is used, a seed will always return the same\n                avatar. This allows you to represent user identities with DiceBear Avatars, for example.\n              </p>\n            </div>\n            <div className=\"col-12 col-md-6 mb-5\">\n              <h4 className=\"h5\">Will the library remain free of charge?</h4>\n              <p>\n                DiceBear Avatars is developed open source and will remain free of charge. I believe that everyone should\n                be able to benefit from this library. Also I'm always happy about improvements and extensions of\n                contributors, which help me to make DiceBear Avatars even better.\n              </p>\n            </div>\n            <div className=\"col-12 col-md-6 mb-5\">\n              <h4 className=\"h5\">Can I use an email address or other sensitive or personal information as a seed?</h4>\n              <p>\n                No! Sensitive or personal data should never be used as seed. The seed could be read from the source\n                code. The generated avatar could also reveal the seed.\n              </p>\n            </div>\n            <div className=\"col-12 col-md-6 mb-5\">\n              <h4 className=\"h5\">Where are the servers located?</h4>\n              <p>The Content Delivery Network of StackPath is used. 45 Edge Locations ensure fast response times.</p>\n            </div>\n            <div className=\"col-12 col-md-6 mb-5\">\n              <h4 className=\"h5\">How stable is the HTTP API?</h4>\n              <p>\n                DiceBear Avatars is a hobby project. Therefore, I can not guarantee the availability of the HTTP API.\n                Access to the HTTP-API can be temporarily or permanently blocked. I also reserve the right to completely\n                discontinue the HTTP API.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as yup from 'yup';\n\nlet values: Array<any> = [];\n\nexport default yup\n  .object({\n    style: yup\n      .string()\n      .oneOf((values = ['transparent', 'circle']))\n      .meta({\n        type: 'select',\n        values: values,\n        defaultValue: values[0]\n      }),\n    mode: yup\n      .string()\n      .oneOf((values = ['include', 'exclude']))\n      .meta({\n        type: 'select',\n        values: values,\n        defaultValue: values[0]\n      }),\n    top: yup\n      .array()\n      .of(yup.string().oneOf((values = ['longHair', 'shortHair', 'eyepatch', 'hat', 'hijab', 'turban'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    topChance: yup\n      .number()\n      .min(0)\n      .max(100)\n      .meta({\n        type: 'range',\n        values: [0, 100],\n        defaultValue: 90\n      }),\n    hatColor: yup\n      .array()\n      .of(yup.string().oneOf((values = ['black', 'blue', 'gray', 'heather', 'pastel', 'pink', 'red', 'white'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    hairColor: yup\n      .array()\n      .of(yup.string().oneOf((values = ['auburn', 'black', 'blonde', 'brown', 'pastel', 'platinum', 'red', 'gray'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    accessories: yup\n      .array()\n      .of(\n        yup.string().oneOf((values = ['kurt', 'prescription01', 'prescription02', 'round', 'sunglasses', 'wayfarers']))\n      )\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    accessoriesChance: yup\n      .number()\n      .min(0)\n      .max(100)\n      .meta({\n        type: 'range',\n        values: [0, 100],\n        defaultValue: 10\n      }),\n    facialHair: yup\n      .array()\n      .of(yup.string().oneOf((values = ['medium', 'light', 'majestic', 'fancy', 'magnum'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    facialHairChance: yup\n      .number()\n      .min(0)\n      .max(100)\n      .meta({\n        type: 'range',\n        values: [0, 100],\n        defaultValue: 10\n      }),\n    facialHairColor: yup\n      .array()\n      .of(yup.string().oneOf((values = ['auburn', 'black', 'blonde', 'brown', 'pastel', 'platinum', 'red', 'gray'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    clothes: yup\n      .array()\n      .of(yup.string().oneOf((values = ['blazer', 'sweater', 'shirt', 'hoodie', 'overall'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    clothesColor: yup\n      .array()\n      .of(yup.string().oneOf((values = ['black', 'blue', 'gray', 'heather', 'pastel', 'pink', 'red', 'white'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    eyes: yup\n      .array()\n      .of(\n        yup\n          .string()\n          .oneOf(\n            (values = [\n              'close',\n              'cry',\n              'defaultValue',\n              'dizzy',\n              'roll',\n              'happy',\n              'hearts',\n              'side',\n              'squint',\n              'surprised',\n              'wink',\n              'winkWacky'\n            ])\n          )\n      )\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    eyebrow: yup\n      .array()\n      .of(yup.string().oneOf((values = ['angry', 'defaultValue', 'flat', 'raised', 'sad', 'unibrow', 'up'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    mouth: yup\n      .array()\n      .of(\n        yup\n          .string()\n          .oneOf(\n            (values = [\n              'concerned',\n              'defaultValue',\n              'disbelief',\n              'eating',\n              'grimace',\n              'sad',\n              'scream',\n              'serious',\n              'smile',\n              'tongue',\n              'twinkle',\n              'vomit'\n            ])\n          )\n      )\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    skin: yup\n      .array()\n      .of(yup.string().oneOf((values = ['tanned', 'yellow', 'pale', 'light', 'brown', 'darkBrown', 'black'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      })\n  })\n  .noUnknown();\n","import * as yup from 'yup';\n\nlet values: Array<any> = [];\n\nexport default yup\n  .object({\n    colors: yup\n      .array()\n      .of(\n        yup\n          .string()\n          .oneOf(\n            (values = [\n              'amber',\n              'blue',\n              'blueGrey',\n              'brown',\n              'cyan',\n              'deepOrange',\n              'deepPurple',\n              'agreenmber',\n              'grey',\n              'indigo',\n              'lightBlue',\n              'lightGreen',\n              'lime',\n              'orange',\n              'pink',\n              'purple',\n              'red',\n              'teal',\n              'yellow'\n            ])\n          )\n      )\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    colorful: yup\n      .number()\n      .oneOf([0, 1])\n      .meta({\n        type: 'switch',\n        values: [0, 1],\n        defaultValue: 0\n      }),\n    primaryColorLevel: yup\n      .number()\n      .oneOf((values = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900]))\n      .meta({\n        type: 'select',\n        values: values,\n        defaultValue: 600\n      }),\n    secondaryColorLevel: yup\n      .number()\n      .oneOf((values = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900]))\n      .meta({\n        type: 'select',\n        values: values,\n        defaultValue: 400\n      }),\n    textureChance: yup\n      .number()\n      .min(0)\n      .max(100)\n      .meta({\n        type: 'range',\n        values: [0, 100],\n        defaultValue: 50\n      }),\n    mouthChance: yup\n      .number()\n      .min(0)\n      .max(100)\n      .meta({\n        type: 'range',\n        values: [0, 100],\n        defaultValue: 100\n      }),\n    sidesChance: yup\n      .number()\n      .min(0)\n      .max(100)\n      .meta({\n        type: 'range',\n        values: [0, 100],\n        defaultValue: 100\n      }),\n    topChange: yup\n      .number()\n      .min(0)\n      .max(100)\n      .meta({\n        type: 'range',\n        values: [0, 100],\n        defaultValue: 100\n      })\n  })\n  .noUnknown();\n","import * as yup from 'yup';\n\nlet values: Array<any> = [];\n\nexport default yup\n  .object({\n    mood: yup\n      .array()\n      .of(yup.string().oneOf((values = ['happy', 'sad', 'surprised'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      })\n  })\n  .noUnknown();\n","import * as yup from 'yup';\n\nexport default yup\n  .object({\n    colorful: yup\n      .number()\n      .oneOf([0, 1])\n      .meta({\n        type: 'switch',\n        values: [0, 1],\n        defaultValue: 0\n      })\n  })\n  .noUnknown();\n","import * as yup from 'yup';\n\nlet values: Array<any> = [];\n\nexport default yup\n  .object({\n    padding: yup\n      .number()\n      .min(0)\n      .max(1)\n      .meta({\n        type: 'switch',\n        values: [0, 0.4],\n        defaultValue: 0\n      }),\n    background: yup\n      .string()\n      .matches(/^#([0-9a-f]{3}|[0-9a-f]{6}|[0-9a-f]{8})$/i)\n      .meta({\n        type: 'switch',\n        values: ['#fff', '#f0f0f0'],\n        defaultValue: '#fff'\n      }),\n    colors: yup\n      .array()\n      .of(\n        yup\n          .string()\n          .oneOf(\n            (values = [\n              'amber',\n              'blue',\n              'blueGrey',\n              'brown',\n              'cyan',\n              'deepOrange',\n              'deepPurple',\n              'agreenmber',\n              'grey',\n              'indigo',\n              'lightBlue',\n              'lightGreen',\n              'lime',\n              'orange',\n              'pink',\n              'purple',\n              'red',\n              'teal',\n              'yellow'\n            ])\n          )\n      )\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      }),\n    colorLevel: yup\n      .number()\n      .oneOf((values = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900]))\n      .meta({\n        type: 'select',\n        values: values,\n        defaultValue: 600\n      })\n  })\n  .noUnknown();\n","import * as yup from 'yup';\n\nexport default yup\n  .object({\n    padding: yup\n      .number()\n      .min(0)\n      .max(0.2)\n      .meta({\n        type: 'switch',\n        values: [0, 0.05],\n        defaultValue: 0\n      }),\n    background: yup\n      .string()\n      .matches(/^#([0-9a-f]{3}|[0-9a-f]{6}|[0-9a-f]{8})$/i)\n      .meta({\n        type: 'switch',\n        values: ['#fff', '#f0f0f0'],\n        defaultValue: '#fff'\n      }),\n    hues: yup.array().of(\n      yup\n        .number()\n        .min(0)\n        .max(360)\n    ),\n    colorLightness: yup\n      .array()\n      .min(2)\n      .max(2)\n      .of(\n        yup\n          .number()\n          .min(0)\n          .max(100)\n      ),\n    grayscaleLightness: yup\n      .array()\n      .min(2)\n      .max(2)\n      .of(\n        yup\n          .number()\n          .min(0)\n          .max(100)\n      ),\n    colorSaturation: yup\n      .number()\n      .min(0)\n      .max(100),\n    grayscaleSaturation: yup\n      .number()\n      .min(0)\n      .max(100)\n  })\n  .noUnknown();\n","import * as yup from 'yup';\n\nlet values: Array<any> = [];\n\nexport default yup\n  .object({\n    mood: yup\n      .array()\n      .of(yup.string().oneOf((values = ['happy', 'sad', 'surprised'])))\n      .meta({\n        type: 'checkbox',\n        values: values,\n        defaultValue: []\n      })\n  })\n  .noUnknown();\n","import avataaars from './config/avataaars';\nimport bottts from './config/bottts';\nimport female from './config/female';\nimport gridy from './config/gridy';\nimport identicon from './config/identicon';\nimport initials from './config/identicon';\nimport jdenticon from './config/jdenticon';\nimport male from './config/male';\nimport SpriteCollection from './types/spriteCollection';\n\nlet spriteCollections: SpriteCollection[] = [\n  {\n    id: 'male',\n    name: '@dicebear/male-sprite-collection',\n    options: male\n  },\n  {\n    id: 'female',\n    name: '@dicebear/female-sprite-collection',\n    options: female\n  },\n  {\n    id: 'identicon',\n    name: '@dicebear/identicon-sprite-collection',\n    options: identicon\n  },\n  {\n    id: 'initials',\n    name: '@dicebear/initials-sprite-collection',\n    options: initials\n  },\n  {\n    id: 'bottts',\n    name: '@dicebear/bottts-sprite-collection',\n    options: bottts\n  },\n  {\n    id: 'avataaars',\n    name: '@dicebear/avataaars-sprite-collection',\n    options: avataaars\n  },\n  {\n    id: 'jdenticon',\n    name: '@dicebear/jdenticon-sprite-collection',\n    options: jdenticon\n  },\n  {\n    id: 'gridy',\n    name: '@dicebear/gridy-sprite-collection',\n    options: gridy\n  }\n];\n\nexport default {\n  spriteCollections: spriteCollections\n};\n","import React from 'react';\nimport Layout from '../layout';\nimport Teaser from '../components/teaser';\nimport Introductions from '../components/introductions';\nimport SpriteCollections from '../components/spriteCollections';\nimport Faq from '../components/faq';\nimport config from '../config';\n\nexport default ({ pageContext }) => (\n  <Layout privacyPolicy={pageContext.privacyPolicy} legalNotice={pageContext.legalNotice}>\n    <Teaser stargazers={pageContext.stargazers} spriteCollections={config.spriteCollections} />\n    <Introductions spriteCollections={config.spriteCollections} />\n    <SpriteCollections spriteCollections={config.spriteCollections} />\n    <Faq />\n  </Layout>\n);\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport './index.scss';\n\ntype Props = {\n  privacyPolicy?: string;\n  legalNotice?: string;\n};\n\nexport default class Layout extends React.Component<Props> {\n  render() {\n    return (\n      <div className=\"d-flex flex-column\">\n        <div>{this.props.children}</div>\n        <div className=\"container align-self-end\">\n          <hr className=\"m-0\" />\n          <div className=\"d-flex flex-column flex-md-row justify-content-between py-2 text-muted\">\n            <div className=\"text-center text-md-left mb-3 mb-md-0\">\n              Documentation realized with <a href=\"https://www.gatsbyjs.org/\">GatsbyJS</a>,{' '}\n              <a href=\"https://reactjs.org/\">react</a>, <a href=\"https://getbootstrap.com/\">bootstrap</a> and{' '}\n              <a href=\"https://octicons.github.com/\">octicons</a>.\n            </div>\n            {this.props.privacyPolicy || this.props.legalNotice ? (\n              <ul className=\"list-inline m-0 text-center text-md-left\">\n                <li className=\"list-inline-item mr-0 ml-4\">\n                  <Link to=\"/\">Home</Link>\n                </li>\n                {this.props.privacyPolicy && (\n                  <li className=\"list-inline-item mr-0 ml-4\">\n                    <Link to=\"/privacy-policy\">Privacy Policy</Link>\n                  </li>\n                )}\n                {this.props.legalNotice && (\n                  <li className=\"list-inline-item mr-0 ml-4\">\n                    <Link to=\"/legal-notice\">Legal Notice / Impressum</Link>\n                  </li>\n                )}\n              </ul>\n            ) : (\n              ''\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}